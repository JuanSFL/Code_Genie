[{"/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/index.js":"1","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/reportWebVitals.js":"2","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/App.js":"3","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/pages/Signup.js":"4","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/pages/Home.js":"5","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/pages/Login.js":"6","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/pages/Profile.js":"7","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/pages/SearchQuestion.js":"8","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/pages/Ask.js":"9","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/pages/SingleThought.js":"10","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/pages/GenieMode.js":"11","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/components/Header/index.js":"12","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/utils/mutations.js":"13","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/utils/queries.js":"14","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/utils/auth.js":"15","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/components/ThoughtList/index.js":"16","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/components/SearchBar/index.js":"17","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/components/NotAuthorized/index.js":"18","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/components/CommentList/index.js":"19","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/components/CommentForm/index.js":"20","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/components/NoMoreTokens/index.js":"21","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/pages/AllQuestions.js":"22","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/components/CommunityQuestions/index.js":"23","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/components/Footer/index.js":"24","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/components/ProfilePicture/index.js":"25"},{"size":499,"mtime":1679439650734,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1679439650746,"results":"28","hashOfConfig":"27"},{"size":2963,"mtime":1680913987388,"results":"29","hashOfConfig":"27"},{"size":2317,"mtime":1679464199530,"results":"30","hashOfConfig":"27"},{"size":3393,"mtime":1679463533385,"results":"31","hashOfConfig":"27"},{"size":2387,"mtime":1679464173549,"results":"32","hashOfConfig":"27"},{"size":2444,"mtime":1680383096707,"results":"33","hashOfConfig":"27"},{"size":398,"mtime":1679464189962,"results":"34","hashOfConfig":"27"},{"size":3505,"mtime":1679464139741,"results":"35","hashOfConfig":"27"},{"size":1596,"mtime":1679465468000,"results":"36","hashOfConfig":"27"},{"size":3266,"mtime":1679464149097,"results":"37","hashOfConfig":"27"},{"size":2370,"mtime":1681021876014,"results":"38","hashOfConfig":"27"},{"size":1149,"mtime":1680114964921,"results":"39","hashOfConfig":"27"},{"size":964,"mtime":1679439650752,"results":"40","hashOfConfig":"27"},{"size":1043,"mtime":1679439650750,"results":"41","hashOfConfig":"27"},{"size":1315,"mtime":1679439650531,"results":"42","hashOfConfig":"27"},{"size":179,"mtime":1679439650528,"results":"43","hashOfConfig":"27"},{"size":523,"mtime":1679439650527,"results":"44","hashOfConfig":"27"},{"size":939,"mtime":1679439650515,"results":"45","hashOfConfig":"27"},{"size":2436,"mtime":1679439650512,"results":"46","hashOfConfig":"27"},{"size":246,"mtime":1679439650525,"results":"47","hashOfConfig":"27"},{"size":837,"mtime":1679464124646,"results":"48","hashOfConfig":"27"},{"size":1202,"mtime":1679439650517,"results":"49","hashOfConfig":"27"},{"size":1848,"mtime":1679439650519,"results":"50","hashOfConfig":"27"},{"size":1050,"mtime":1680117373969,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"or2i80",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},"/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/index.js",[],["115","116"],"/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/reportWebVitals.js",[],"/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/App.js",["117"],"import React from 'react';\nimport \"./Main.css\"\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport SingleThought from './pages/SingleThought';\nimport Profile from './pages/Profile';\nimport Header from './components/Header';\nimport SearchQuestion from './pages/SearchQuestion';\nimport GenieMode from './pages/GenieMode';\nimport Ask from './pages/Ask'\nimport AllQuestions from './pages/AllQuestions';\nimport Footer from './components/Footer';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Routes>\n               <Route \n                path=\"/genie-mode\"\n                element={<GenieMode />}\n              />\n              <Route \n                path=\"/login\"\n                element={<Login />}\n              />\n              <Route \n                path=\"/ask\"\n                element={<Ask />}\n              />\n              <Route \n                path=\"/community\"\n                element={<AllQuestions />}\n              />\n              <Route \n                path=\"/search\"\n                element={<SearchQuestion />}\n              />\n              <Route \n                path=\"/signup\"\n                element={<Signup />}\n              />\n              <Route \n                path=\"/me\"\n                element={<Profile />}\n              />\n              <Route \n                path=\"/profiles/:username\"\n                element={<Profile />}\n              />\n              <Route \n                path=\"/thoughts/:thoughtId\"\n                element={<SingleThought />}\n              />\n              <Route \n                path=\"*\"\n                element={<Home />}\n              />\n            </Routes>\n          </div>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/pages/Signup.js",["118","119"],"import React, { useState } from 'react';\nimport { Helmet } from \"react-helmet\";\n\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div className=\"appear\">\n      <Helmet>\n          <title>Code Genie | Signup</title>\n      </Helmet>\n    <div className=\"large-container-center\">\n    <div className=\"login-cont\">\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"username\"></label>\n          <input\n                   placeholder=\"Username\"\n                   name=\"username\"\n                   type=\"text\"\n                   value={formState.name}\n            className=\"cred-input\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\"></label>\n          <input\n            placeholder=\"youremail@test.com\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n            className=\"cred-input\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\"></label>\n          <input\n            placeholder=\"password\"\n            name=\"password\"\n            type=\"password\"\n            value={formState.password}\n            className=\"cred-input\"\n            onChange={handleChange}\n          />\n        </div>\n          <button type=\"submit\" className=\"flashy-btn\">Submit</button>\n      </form>\n    </div>\n    </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/pages/Home.js",["120","121"],"import { Link } from \"react-router-dom\";\nimport genieDemo from \"../images/iphone-demo.png\";\nimport icons from \"../images/icons.png\";\nimport Auth from \"../utils/auth\";\nimport { useEffect } from \"react\";\n\nfunction Home() {\n  useEffect(() => {\n    const hero = document.querySelector(\".hero\");\n    const hero2 = document.querySelector(\".hero-2\");\n    window.addEventListener(\"scroll\", () => {\n      const heroTop = hero.getBoundingClientRect().top;\n      const hero2Top = hero2.getBoundingClientRect().top;\n      const windowHeight = window.innerHeight;\n      if (heroTop < windowHeight && heroTop > -hero.offsetHeight) {\n        hero.classList.remove(\"hidden\");\n      } else {\n        hero.classList.add(\"hidden\");\n      }\n      if (hero2Top < windowHeight && hero2Top > -hero2.offsetHeight) {\n        hero2.classList.remove(\"hidden\");\n      } else {\n        hero2.classList.add(\"hidden\");\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"appear\">\n      <div>\n        <div className=\"hero\">\n          <div className=\"welcome-info\">\n            <p className=\"description low-opacity\">CODE GENIE</p>\n            <h1 className=\"bold-intro\">\n              For Developers, By Developers... And A.I.\n            </h1>\n            <p className=\"description\">\n              The Worlds first coding forum to integrate an A.I. chatbot to get\n              developers answers immediately.\n            </p>\n\n            {Auth.loggedIn() ? (\n              <>\n                <div className=\"btn-options\">\n                  <Link to=\"/genie\">\n                    <button className=\"flashy-btn left\">Genie Mode</button>\n                  </Link>\n                </div>\n              </>\n            ) : (\n              <>\n                <div className=\"btn-options\">\n                  <Link to=\"/login\">\n                    <button className=\"flashy-btn left\">Login</button>\n                  </Link>\n                  <p className=\"or\">Or</p>\n                  <Link to=\"/signup\">\n                    <button className=\"flashy-btn left\">Signup</button>\n                  </Link>\n                </div>\n              </>\n            )}\n          </div>\n          <div className=\"demo\">\n            <Link to=\"/genie-mode\">\n              <img src={genieDemo} className=\"card\"></img>\n            </Link>\n            <div className=\"banner\">GENIE MODE</div>\n          </div>\n        </div>\n\n        <div className=\"excess\"></div>\n\n        <div className=\"hero-2\">\n            <Link to=\"/genie-mode\">\n              <img src={icons} className=\"card-2\"></img>\n            </Link>\n          <div className=\"welcome-info-2\">\n            <p className=\"description low-opacity\">QUESTION AND ANSWER</p>\n            <h1 className=\"bold-intro\">\n              EVERYONE WINS\n            </h1>\n            <p className=\"description\">\n              Interact with the community or answer other members questions to earn GenieTokens.\n            </p>\n\n                <div className=\"btn-options\">\n                  <Link to=\"/ask\">\n                    <button className=\"flashy-btn left\">Ask</button>\n                  </Link>\n                  <p className=\"or\">Or</p>\n                  <Link to=\"/community\">\n                    <button className=\"flashy-btn left\">Answer</button>\n                  </Link>\n                </div>\n\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/pages/Login.js",["122"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\nimport { Helmet } from \"react-helmet\";\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <div className=\"appear\">\n       <Helmet>\n          <title>Code Genie | Login</title>\n      </Helmet>\n    <div className=\"large-container-center\">\n    <div className=\"login-cont\">\n      <h2>LOGIN</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"enter-cred\">\n          <label htmlFor=\"email\" ></label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            value={formState.email}\n            className=\"cred-input\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"enter-cred\">\n          <label htmlFor=\"pwd\"></label>\n          <input\n            placeholder=\"password\"\n            name=\"password\"\n            type=\"password\"\n            value={formState.password}\n            className=\"cred-input\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"log-btns\">\n          <button type=\"submit\" className=\"flashy-btn\">Submit</button>\n          <p className=\"or\">Or</p>\n      <button className=\"flashy-btn\"><Link to=\"/signup\" >Signup</Link></button>\n          </div>\n      </form>\n      \n    </div>\n    </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/pages/Profile.js",[],"/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/pages/SearchQuestion.js",[],"/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/pages/Ask.js",["123","124","125"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../utils/queries';\n\nimport Auth from '../utils/auth';\nimport NotAuthorized from '../components/NotAuthorized';\nimport { Helmet } from \"react-helmet\";\n\nconst Ask = () => {\n  const [thoughtText, setThoughtText] = useState('');\n  const [thoughtTitle, setThoughtTitle] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const thoughts  = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtTitle,\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n      setThoughtTitle('')\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n  console.log(name,value)\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    } \n    if (name === 'thoughtTitle' && value.length <= 80) {\n      console.log(thoughtTitle)\n      setThoughtTitle(value);\n      console.log(thoughtTitle)\n    }\n  };\n  \n\n  return (\n    <div className=\"appear top-pad\">\n      <Helmet>\n          <title>Code Genie | Ask</title>\n      </Helmet>\n      <h3 className=\"type-white large\">Ask the Community</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n        <div className=\"ask-form\">\n          <form\n          id=\"spacing\"\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"question-title\">\n              <textarea\n                name=\"thoughtTitle\"\n                placeholder=\"Post Title\"\n                value={thoughtTitle}\n                className=\"title-input\"\n                onChange={handleChange}\n              ></textarea>\n            </div>\n            <div className=\"question-ask\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Ask your question here\"\n                value={thoughtText}\n                className=\"ask-input\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n            <p\n            className={`type-white ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n\n          \n              <button className=\"flashy-btn\" type=\"submit\">\n                Create Post !\n              </button>\n        \n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n          </div>\n        </>\n        \n      ) : (\n   <NotAuthorized/>\n      )}\n    </div>\n  );\n};\n\nexport default Ask;\n","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/pages/SingleThought.js",[],"/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/pages/GenieMode.js",["126","127","128"],"import React, { useState } from \"react\";\nimport tokens from \"../images/tokens.png\";\nimport Auth from \"../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery, gql, useLazyQuery } from \"@apollo/client\";\nimport NotAuthorized from \"../components/NotAuthorized\";\nimport { Helmet } from \"react-helmet\";\n// import GenieTokens from \"../components/GeniePoints\";\nimport NoMoreTokens from \"../components/NoMoreTokens\";\nimport logo from \"../images/logo.png\"\n\n\nconst GET_OPENAI_ANSWER = gql`\n  query Openai($openaiInput2: String!) {\n    openai(input: $openaiInput2) {\n      answer\n    }\n  }\n`;\n\nfunction GenieMode() {\n  const [question, setQuestion] = useState(\"\"); // add a state variable to store the question\n  const [setAnswer, { loading, data }] = useLazyQuery(GET_OPENAI_ANSWER);\n  const [history, setHistory] = useState([]); // add a state variable to store the history of questions and answers\n  const [genieTokens, setGenieTokens]=useState(3)\n\n  const handleClick = (event)=>{\n    setGenieTokens(genieTokens-1)\n  }\n\n  if(genieTokens<0){\n    return(<div>\n      <Helmet>\n          <title>Code Genie | GenieMode</title>\n      </Helmet>\n      <NoMoreTokens/>\n      </div>)\n  }\n\n  const handleChange = (event) => {\n    setQuestion(event.target.value); // update the state variable with the user input\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setAnswer({ variables: { openaiInput2: question } });\n    // add the current question and its response to the history array\n    setHistory([...history, { question, answer: data?.openai.answer }]);\n    // clear the question input field\n    setQuestion(\"\");\n  };\n\n  console.log(\"Genie Mode Page\", data);\n  return (\n    <div className=\"appear\">\n      <Helmet>\n          <title>Code Genie | GenieMode</title>\n      </Helmet>\n      <div className=\"genie-ask\">\n        <h2>\n          Get Your Answers. <span className=\"glowing\">Instantly.</span>\n        </h2>\n        {Auth.loggedIn() ? (\n          <form onSubmit={handleSubmit} >\n            <input\n              className=\"ask-q\"\n              placeholder=\"Ask the Genie\"\n              type=\"text\"\n              title=\"Search\"\n              value={question}\n              onChange={handleChange}\n            ></input>\n            <img src={tokens} className=\"token-icon\" alt=\"token-icon\"></img><p className=\"genieTokens\">{genieTokens} Tokens Remaining</p>\n            {loading ? (\n              <div class=\"spinner\">\n                <div class=\"spinner1\"></div>\n              </div>\n            ) : (\n              <div>\n                <button className=\"lamp-btn\" type=\"submit\" onClick={handleClick}>\n                  Rub the Lamp\n                </button>\n                <p className=\"small-text\">\n                  * This Question Will Cost 1 Genie Token *\n                </p>\n                <div className={`bubble ${data?.openai.answer ? \"loaded\" : \"\"}`}>\n                  {data?.openai.answer}\n                  <div className=\"angle\"></div>\n                  <img src={logo} className=\"message-icon\"/>\n                </div>\n                </div>\n            )}\n          </form>\n        ) : (\n          <>\n            <NotAuthorized />\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default GenieMode;\n","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/components/Header/index.js",["129"],"import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Auth from '../../utils/auth';\nimport logo from '../../images/logo.png';\n\nfunction Header() {\n  const [collapsed, setCollapsed] = useState(true);\n\n  const toggleNavbar = () => {\n    setCollapsed(!collapsed);\n  };\n\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <Link to=\"/\" className=\"navbar-brand\">\n      <img src={logo} id=\"logo\" className=\"d-lg-none\" alt=\"\" />\n    </Link>\n    <button\n      className=\"navbar-toggler\"\n      type=\"button\"\n      onClick={toggleNavbar}\n      aria-controls=\"navbarNav\"\n      aria-expanded={!collapsed}\n      aria-label=\"Toggle navigation\"\n    >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className={`navbar-collapse ${collapsed ? 'collapse' : ''}`} id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link to=\"/community\" className=\"nav-link active\" onClick={toggleNavbar}>\n              Community\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/ask\" className=\"nav-link active\" onClick={toggleNavbar}>\n              Ask a Question\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/genie-mode\" className=\"nav-link\" onClick={toggleNavbar}>\n              Genie Mode\n            </Link>\n          </li>\n        </ul>\n\n        <Link to=\"/\"><img src={logo} id=\"logo\" className=\"navbar-brand d-none d-lg-block\"></img></Link>\n\n        {Auth.loggedIn() ? (\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link to=\"/me\" className=\"nav-link active\" onClick={toggleNavbar}>\n                Profile\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/\" onClick={logout}>\n                Logout\n              </a>\n            </li>\n          </ul>\n        ) : (\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link to=\"/login\" className=\"nav-link\" onClick={toggleNavbar}>\n                Login\n              </Link>\n            </li>\n          </ul>\n        )}\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;\n","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/utils/mutations.js",[],"/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/utils/queries.js",[],"/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/utils/auth.js",["130"],"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/components/ThoughtList/index.js",[],"/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/components/SearchBar/index.js",[],"/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/components/NotAuthorized/index.js",[],"/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/components/CommentList/index.js",[],"/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/components/CommentForm/index.js",["131"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div className=\"comment-form\">\n      <h4 className=\"type-white align\">Reply to this post</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"comment-input\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n            <p\n           className={`type-white align ${\n            characterCount === 280 || error ? 'text-danger' : ''\n          }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"flashy-btn under\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">Login</Link> or <Link to=\"/signup\">Signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/components/NoMoreTokens/index.js",[],"/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/pages/AllQuestions.js",[],"/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/components/CommunityQuestions/index.js",[],"/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/components/Footer/index.js",["132","133","134","135"],"import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  return (\n    <footer class=\"text-center text-white\" style=\"background-color: #f1f1f1;\">\n    <div class=\"container pt-4\">\n      <section class=\"mb-4\">\n        <a\n          class=\"btn btn-link btn-floating btn-lg text-dark m-1\"\n          href=\"#!\"\n          role=\"button\"\n          data-mdb-ripple-color=\"dark\"\n          ><i class=\"fab fa-facebook-f\"></i\n        ></a>\n  \n        <a\n          class=\"btn btn-link btn-floating btn-lg text-dark m-1\"\n          href=\"#!\"\n          role=\"button\"\n          data-mdb-ripple-color=\"dark\"\n          ><i class=\"fab fa-twitter\"></i\n        ></a>\n  \n\n        <a\n          class=\"btn btn-link btn-floating btn-lg text-dark m-1\"\n          href=\"#!\"\n          role=\"button\"\n          data-mdb-ripple-color=\"dark\"\n          ><i class=\"fab fa-google\"></i\n        ></a>\n  \n  \n        <a\n          class=\"btn btn-link btn-floating btn-lg text-dark m-1\"\n          href=\"#!\"\n          role=\"button\"\n          data-mdb-ripple-color=\"dark\"\n          ><i class=\"fab fa-instagram\"></i\n        ></a>\n  \n        <a\n          class=\"btn btn-link btn-floating btn-lg text-dark m-1\"\n          href=\"#!\"\n          role=\"button\"\n          data-mdb-ripple-color=\"dark\"\n          ><i class=\"fab fa-linkedin\"></i\n        ></a>\n        <a\n          class=\"btn btn-link btn-floating btn-lg text-dark m-1\"\n          href=\"#!\"\n          role=\"button\"\n          data-mdb-ripple-color=\"dark\"\n          ><i class=\"fab fa-github\"></i\n        ></a>\n      </section>\n    </div>\n  \n    <div class=\"text-center text-dark p-3\" style=\"background-color: rgba(0, 0, 0, 0.2);\">\n      © 2020 Copyright:\n      <a class=\"text-dark\" href=\"https://mdbootstrap.com/\">MDBootstrap.com</a>\n    </div>\n  </footer>\n  );\n};\n\nexport default Footer;\n","/Users/lukemickan/Desktop/CodeGenie-Project/Project_3/client/src/components/ProfilePicture/index.js",["136"],"function showUploadWidget() {\n  cloudinary.openUploadWidget(\n    {\n      cloudName: \"<cloud name>\",\n      uploadPreset: \"<upload preset>\",\n      sources: [\"local\", \"url\", \"camera\", \"google_drive\"],\n      googleApiKey: \"<image_search_google_api_key>\",\n      showAdvancedOptions: false,\n      cropping: true,\n      multiple: false,\n      defaultSource: \"local\",\n      styles: {\n        palette: {\n          window: \"#000000\",\n          sourceBg: \"#000000\",\n          windowBorder: \"#8E9FBF\",\n          tabIcon: \"#FFFFFF\",\n          inactiveTabIcon: \"#8E9FBF\",\n          menuIcons: \"#2AD9FF\",\n          link: \"#08C0FF\",\n          action: \"#336BFF\",\n          inProgress: \"#00BFFF\",\n          complete: \"#33ff00\",\n          error: \"#EA2727\",\n          textDark: \"#000000\",\n          textLight: \"#FFFFFF\",\n        },\n        fonts: { default: null, \"sans-serif\": { url: null, active: true } },\n      },\n    },\n    (err, info) => {\n      if (!err) {\n        console.log(\"Upload Widget event - \", info);\n      }\n    }\n  );\n}\n\nexport default showUploadWidget",["137","138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":23,"column":8,"nodeType":"145","messageId":"146","endLine":23,"endColumn":14},{"ruleId":"143","severity":1,"message":"147","line":16,"column":21,"nodeType":"145","messageId":"146","endLine":16,"endColumn":26},{"ruleId":"143","severity":1,"message":"148","line":16,"column":28,"nodeType":"145","messageId":"146","endLine":16,"endColumn":32},{"ruleId":"149","severity":1,"message":"150","line":66,"column":15,"nodeType":"151","endLine":66,"endColumn":53},{"ruleId":"149","severity":1,"message":"150","line":76,"column":15,"nodeType":"151","endLine":76,"endColumn":51},{"ruleId":"143","severity":1,"message":"148","line":11,"column":26,"nodeType":"145","messageId":"146","endLine":11,"endColumn":30},{"ruleId":"143","severity":1,"message":"152","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"153","line":6,"column":26,"nodeType":"145","messageId":"146","endLine":6,"endColumn":34},{"ruleId":"143","severity":1,"message":"148","line":39,"column":15,"nodeType":"145","messageId":"146","endLine":39,"endColumn":19},{"ruleId":"143","severity":1,"message":"152","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":14},{"ruleId":"143","severity":1,"message":"154","line":5,"column":10,"nodeType":"145","messageId":"146","endLine":5,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":89,"column":19,"nodeType":"151","endLine":89,"endColumn":61},{"ruleId":"149","severity":1,"message":"150","line":52,"column":22,"nodeType":"151","endLine":52,"endColumn":91},{"ruleId":"155","severity":1,"message":"156","line":41,"column":1,"nodeType":"157","endLine":41,"endColumn":34},{"ruleId":"143","severity":1,"message":"148","line":19,"column":15,"nodeType":"145","messageId":"146","endLine":19,"endColumn":19},{"ruleId":"143","severity":1,"message":"158","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":21},{"ruleId":"143","severity":1,"message":"159","line":2,"column":23,"nodeType":"145","messageId":"146","endLine":2,"endColumn":34},{"ruleId":"160","severity":1,"message":"161","line":6,"column":44,"nodeType":"162","messageId":"163","endLine":6,"endColumn":78},{"ruleId":"160","severity":1,"message":"161","line":60,"column":44,"nodeType":"162","messageId":"163","endLine":60,"endColumn":89},{"ruleId":"164","severity":2,"message":"165","line":2,"column":3,"nodeType":"145","messageId":"166","endLine":2,"endColumn":13},{"ruleId":"139","replacedBy":"167"},{"ruleId":"141","replacedBy":"168"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'data' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'QUERY_ME' is defined but never used.","'useQuery' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'useLocation' is defined but never used.","'useNavigate' is defined but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","stylePropNotObject","no-undef","'cloudinary' is not defined.","undef",["169"],["170"],"no-global-assign","no-unsafe-negation"]